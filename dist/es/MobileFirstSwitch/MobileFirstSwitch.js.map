{"version":3,"file":"MobileFirstSwitch.js","sources":["../../../src/MobileFirstSwitch/MobileFirstSwitch.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\n\nimport { isBrowser } from '../_common/utils'\n\nexport const Breakpoint = ({ children, query }) => <>{children}</>\nBreakpoint.displayName = 'Breakpoint'\n\nexport const Default = ({ children }) => <>{children}</>\nDefault.displayName = 'Default'\n\n/**\n * A helper for conditionally rendering children based \n * on media queries using a mobile first approach. \n * \n * How does it work?\n * - Like a switch will only match(render) one condition at a time\n * - Order matters, order <Breakpoints> like you would in CSS for mobile first\n * - <Default> will be used if no other <Breakpoint>'s match.\n * \n * Usage:\n    <MobileFirstSwitch>\n      <Default>\n        <h1>MOBILE Breakpoint</h1>\n      </Default>\n      <Breakpoint query={match.isMD}>\n        <h1>MEDIUM Breakpoint</h1>\n      </Breakpoint>\n      <Breakpoint query={match.isLG}>\n        <h1>LARGE Breakpoint</h1>\n      </Breakpoint>\n    </MobileFirstSwitch>\n */\nconst MobileFirstSwitch = ({ children }) => {\n  let defaultBreakpoint = null\n  let matchedBreakpoint = null\n  const [resizeCount, setResizeCount] = useState(0)\n  const onMediaQueryChange = useCallback(\n    () => setResizeCount(resizeCount + 1),\n    [resizeCount]\n  )\n\n  useEffect(() => {\n    const items = React.Children.toArray(children)\n    const mediaQueryLists = items\n      .map((item) => {\n        return typeof item.props.query === 'string'\n          ? window.matchMedia(item.props.query)\n          : null\n      })\n      .filter((item) => item !== null)\n\n    mediaQueryLists.forEach((queryList) =>\n      // queryList.addEventListener('change', onMediaQueryChange)\n      // For safari iOS compatibility you must use addListener / removeListener\n      queryList.addListener(onMediaQueryChange)\n    )\n\n    return () => {\n      mediaQueryLists.forEach((queryList) =>\n        // queryList.removeEventListener('change', onMediaQueryChange)\n        // For safari iOS compatibility you must use addListener / removeListener\n        queryList.removeListener(onMediaQueryChange)\n      )\n    }\n  }, [children, onMediaQueryChange])\n\n  React.Children.forEach(children, (child) => {\n    const isValidChild = child !== null && child.type && child.type.displayName\n    const isDefaultBreakpoint =\n      isValidChild && child.type.displayName === 'Default'\n    const hasValidQuery = isValidChild && typeof child.props.query === 'string'\n    const childContent = isValidChild && child.props.children\n\n    if (isDefaultBreakpoint) {\n      defaultBreakpoint = childContent\n    }\n\n    if (!isDefaultBreakpoint && hasValidQuery && isBrowser) {\n      const { matches } = window.matchMedia(child.props.query)\n      matchedBreakpoint = matches === true ? childContent : matchedBreakpoint\n    }\n  })\n\n  return matchedBreakpoint !== null ? matchedBreakpoint : defaultBreakpoint\n}\n\nexport default MobileFirstSwitch\n"],"names":["Breakpoint","children","query","displayName","Default","MobileFirstSwitch","defaultBreakpoint","matchedBreakpoint","useState","resizeCount","setResizeCount","onMediaQueryChange","useCallback","useEffect","items","React","Children","toArray","mediaQueryLists","map","item","props","window","matchMedia","filter","forEach","queryList","addListener","removeListener","child","isValidChild","type","isDefaultBreakpoint","hasValidQuery","childContent","isBrowser","matches"],"mappings":"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"}