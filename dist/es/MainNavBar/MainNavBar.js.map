{"version":3,"file":"MainNavBar.js","sources":["../../../src/MainNavBar/MainNavBar.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { AppBar, Box, Container, fade, Toolbar } from '@material-ui/core'\nimport { Location } from '@reach/router'\nimport styled from 'styled-components'\n\nimport { tracking } from '../_common/tracking'\nimport ThemeProvider, { match } from '../_contexts/Theme'\nimport useIntersect from '../_hooks/useIntersect'\nimport Button from '../Button/Button'\nimport HamburgerNav from '../HamburgerNav/HamburgerNav'\nimport KlickLogo from '../KlickLogo/KlickLogo'\nimport { InternalLink } from '../Links/Links'\n\nconst BaseMainNavBar = ({ defaultTheme, location, pathThemes, links }) => {\n  const intersectionRef = useRef()\n  const [setNode, entry] = useIntersect({\n    rootMargin: '0px 0px 0px',\n  })\n\n  useEffect(() => {\n    setNode(intersectionRef.current)\n  }, [setNode])\n\n  const isSticky =\n    !!entry.boundingClientRect &&\n    entry.boundingClientRect.top <= 0 &&\n    !entry.isIntersecting\n\n  const isSingleButton = links.length === 1\n  const pathTheme = getPathTheme(location.pathname, pathThemes)\n  const currentTheme = isSticky ? 'onBlack' : pathTheme.type || defaultTheme\n  const initBgFade = pathTheme.initBgFade\n\n  return (\n    <ThemeProvider themeType={currentTheme}>\n      <div ref={intersectionRef} />\n      <StyledAppBar\n        elevation={0}\n        position=\"sticky\"\n        sticky={isSticky ? 1 : 0}\n        component=\"nav\"\n        $isSticky={isSticky}\n        $initBgFade={initBgFade}\n      >\n        <BaseMainNavBarContent\n          isSingleButton={isSingleButton}\n          location={location}\n          links={links}\n        />\n      </StyledAppBar>\n    </ThemeProvider>\n  )\n}\n\nconst MainNavBarButtons = ({ links, location, isSingleButton }) => {\n  return (\n    <>\n      {links.map((link, index) => {\n        const isButton = link.type === 'button'\n        const isCurrentPage = getIsCurrentPage({ link, location })\n        return (\n          <StyledButton\n            key={index}\n            component={link.component || InternalLink}\n            size=\"large\"\n            variant={isButton ? 'contained' : 'text'}\n            color={isButton ? 'primary' : 'default'}\n            to={link.to}\n            disableElevation={isButton}\n            $isCurrentPage={isCurrentPage}\n            $isSingleButton={isSingleButton}\n            onClick={() => {\n              track({ id: link.label, dcCode: link.dcCode })\n            }}\n            {...link.props}\n          >\n            {link.label}\n          </StyledButton>\n        )\n      })}\n    </>\n  )\n}\n\nconst BaseMainNavBarContent = React.memo(\n  ({ links, isSingleButton, location }) => {\n    return (\n      <Container>\n        <Toolbar disableGutters={true}>\n          <InternalLink\n            to=\"/\"\n            aria-label=\"Homepage\"\n            onClick={() => {\n              track({ id: 'Logo' })\n            }}\n          >\n            <StyledKlickLogo orientation=\"landscape\" />\n          </InternalLink>\n          <Box flexGrow={1} />\n          <MainNavBarButtons\n            isSingleButton={isSingleButton}\n            links={links}\n            location={location}\n          />\n          <StyledHamburgerNav links={links} $isSingleButton={isSingleButton} />\n        </Toolbar>\n      </Container>\n    )\n  }\n)\n\nconst track = ({ id, dcCode }) => {\n  tracking.track('Header Nav Item Clicked', {\n    category: 'Page Interactions',\n    action: 'Header Nav Click',\n    label: id,\n    dcCode,\n  })\n}\n\nconst normalPathname = (pathname) =>\n  pathname === '/' ? pathname : pathname?.replace(/\\/$/, '')\n\nconst getPathTheme = (pathname, pathThemes) => {\n  const themeKey = Object.keys(pathThemes).find((key) => {\n    const npath = normalPathname(pathname)\n    return npath === key || (npath?.indexOf(key) === 0 && key !== '/')\n  })\n  return themeKey ? pathThemes[themeKey] : false\n}\n\nfunction getIsCurrentPage({ link, location }) {\n  return link.to?.replace(/\\//g, '') === location.pathname?.replace(/\\//g, '')\n}\n\nconst StyledAppBar = styled(AppBar)`\n  background-color: ${({ $isSticky, $initBgFade, theme }) =>\n    $isSticky\n      ? '#000'\n      : $initBgFade\n      ? fade(theme.palette.background.default, $initBgFade)\n      : 'transparent'};\n  transition: background-color 0.5s ease-in;\n  margin-bottom: -58px;\n  position: relative; // IE11 fallback\n  position: sticky;\n\n  ${match.isSM} {\n    margin-bottom: -64px;\n  }\n  ${match.isMD} {\n    margin-bottom: -82px;\n  }\n`\n\nconst StyledButton = styled(Button)`\n  display: ${({ $isSingleButton }) =>\n    $isSingleButton ? 'inline-flex' : 'none'};\n  margin: ${({ theme }) => `0 ${theme.spacing(3)}px 0 0`};\n\n  ${({ theme, variant, $isCurrentPage }) =>\n    $isCurrentPage &&\n    variant === 'text' &&\n    `border-bottom: 3px solid ${theme.palette.primary.main};`}\n\n  &:last-of-type {\n    margin: 0;\n  }\n\n  ${match.isMD} {\n    display: inline-flex;\n  }\n\n  &.MuiButton-sizeLarge,\n  &[class*='MuiButton-sizeLarge-'] {\n    ${({ $isSingleButton }) => $isSingleButton && `padding: 16px 24px;`}\n  }\n`\n\nconst StyledHamburgerNav = styled(HamburgerNav)`\n  display: ${({ $isSingleButton }) => ($isSingleButton ? 'none' : 'flex')};\n  ${match.isMD} {\n    display: none;\n  }\n`\n\nconst StyledKlickLogo = styled(KlickLogo)`\n  height: 40px;\n  ${match.isMD} {\n    margin: ${({ theme }) => `${theme.spacing(1)}px 0`};\n    height: 58px;\n  }\n`\n\nconst MainNavBar = ({ ...props }) => (\n  <Location>\n    {({ location }) => <BaseMainNavBar location={location} {...props} />}\n  </Location>\n)\n\nMainNavBar.defaultProps = {\n  pathThemes: [],\n  defaultTheme: 'onWhite',\n  links: [\n    {\n      label: 'Get in touch',\n      to: '/contact',\n      type: 'button',\n    },\n  ],\n}\n\nexport default MainNavBar\n"],"names":["BaseMainNavBar","defaultTheme","location","pathThemes","links","intersectionRef","useRef","useIntersect","rootMargin","setNode","entry","useEffect","current","isSticky","boundingClientRect","top","isIntersecting","isSingleButton","length","pathTheme","getPathTheme","pathname","currentTheme","type","initBgFade","MainNavBarButtons","map","link","index","isButton","isCurrentPage","getIsCurrentPage","component","InternalLink","to","track","id","label","dcCode","props","BaseMainNavBarContent","React","memo","tracking","category","action","normalPathname","replace","themeKey","Object","keys","find","key","npath","indexOf","StyledAppBar","styled","AppBar","$isSticky","$initBgFade","theme","fade","palette","background","match","isSM","isMD","StyledButton","Button","$isSingleButton","spacing","variant","$isCurrentPage","primary","main","StyledHamburgerNav","HamburgerNav","StyledKlickLogo","KlickLogo","MainNavBar","defaultProps"],"mappings":"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"}