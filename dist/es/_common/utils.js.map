{"version":3,"file":"utils.js","sources":["../../../src/_common/utils.js"],"sourcesContent":["import { getImage } from 'gatsby-plugin-image'\n\nexport const isBrowser = typeof window !== 'undefined'\n\nexport const capitalize = (word) =>\n  typeof word === 'string' ? word.charAt(0).toUpperCase() + word.slice(1) : word\n\nexport const getRandomInt = (min, max) => {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nexport const getDataFromJsonQuery = (data, rootNodeName) => {\n  try {\n    return data[rootNodeName].edges.map((item) => item.node)\n  } catch (err) {\n    console.log(`Error parsing JSON data for ${rootNodeName}`, err)\n    return []\n  }\n}\n\nexport const isIntersectionObserverSupported = () => {\n  return (\n    'IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype\n  )\n}\n\nexport const calcPageFillRadius = (x, y, windowWidth, windowHeight) => {\n  const l = Math.max(x - 0, windowWidth - x)\n  const h = Math.max(y - 0, windowHeight - y)\n  return Math.sqrt(Math.pow(l, 2) + Math.pow(h, 2))\n}\n\nexport const getDevicePixelRatio = (maxDpr = 2.0) =>\n  isBrowser\n    ? Math.min(\n        Math.max(Math.round(window.devicePixelRatio), 1),\n        maxDpr\n      ).toFixed(1)\n    : '1.0'\n\nexport const reduceImages = (edges) =>\n  edges.reduce(\n    (acc, cur) => ({\n      ...acc,\n      [cur.node.name]: getImage(cur.node),\n    }),\n    {}\n  )\n\nexport const groupBy = (data, type) =>\n  data.reduce((acc, cur) => {\n    cur[type].forEach((t) => {\n      if (!acc[t]) acc[t] = []\n      acc[t].push(cur)\n    })\n    return acc\n  }, {})\n"],"names":["isIntersectionObserverSupported","window","IntersectionObserverEntry","prototype"],"mappings":";;IAsBaA,+BAA+B,GAAG,SAAlCA,+BAAkC,GAAM;AACnD,SACE,0BAA0BC,MAA1B,IACA,+BAA+BA,MAD/B,IAEA,uBAAuBA,MAAM,CAACC,yBAAP,CAAiCC,SAH1D;AAKD;;;;"}